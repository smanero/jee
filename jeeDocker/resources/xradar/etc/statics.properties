system.label=XRadar R02Z

radar.config=${basedir}/etc/radar-config.xml
version.home=D:/eadmin/dev/aplic/${version.prefix}${version}/aplic/r02zEARClasses
target.classes=${version.home}/build
target.source=${version.home}/src

docs.home=${output.dir}/docs

ckjm.report.file=${docs.home}/xml/ckjm_report.xml
checkstyle.report.file=${docs.home}/xml/checkstyle_report.xml
cpd.report.file=${docs.home}/xml/cpd_report.xml
depfind.report.file=${docs.home}/xml/depfind_report.xml
test.depfind.report.file=${docs.home}/xml/test_depfind_report.xml
java2html.root=${docs.home}/xml/htmlcode
javancss.report.file=${docs.home}/xml/javancss_report.xml
jdepend.report.file=${docs.home}/xml/jdepend_report.xml
pmd.report.file=${docs.home}/xml/pmd_report.xml
findbugs.report.file=${docs.home}/xml/findbugs_report.xml
cloc.report.file=${docs.home}/xml/cloc.xml
macaron.report.file=${docs.home}/xml/macaron.xml

## Set pmd the rulesets for the system
pmd.analysis.rulesetfiles=rulesets/basic.xml,rulesets/imports.xml,rulesets/unusedcode.xml,rulesets/design.xml,rulesets/codesize.xml,rulesets/braces.xml, rulesets/coupling.xml, rulesets/optimizations.xml, rulesets/sunsecure.xml, rulesets/logging-java.xml, rulesets/strings.xml
## Set pmd minimum priority, 5 Informational, 4 Warning, 3 Warning high, 2 Error, 1 Error high  (E.g. set this to 4 to ignore informational level checks)
pmd.analysis.mimimumPriority=5

## Set pmd-cpd the minimum token count to qualify for a duplication
cpd.analysis.minimum.token.count=250

## Set checkstyle style config for the system
checkstyle.analysis.checks=etc/checkstyle_checks.xml

## OPTIONAL : If you want coupling analysis. Set to true. For large systems, this may require quite a lot of performance.
#coupling.analysis=false

## OPTIONAL : If you have a javadoc available, you can incorporate that as well. Else, comment out.
javadoc.report=true
javadoc.root=${docs.home}/api

## OPTIONAL : If you want static class fileset analysis, set to true. Else, comment out.
## If bcc.analysis=true. Set the classes that are entrypoints to the system (bcc.analysis.critical.classes).
## This will be the basis of the classfileset that is generated. Default is set to all. This task currently only runs in unix/linux/cygwin
#bcc.analysis=true
#bcc.analysis.critical.classes=**/**.class

## OPTIONAL : If you have junit reports running and have an available report, set to true. Else, comment out.
#junit.report.analysis=true
#junit.report.file=.../junit_report.xml

## OPTIONAL : If you have jcoverage reports running as part of your unit tests and have an available report, set to true. Else, comment out.
#jcoverage.report.analysis=true
#jcoverage.report.file=.../coverage_report.xml

## OPTIONAL : If you have EMMA reports running as part of your unit tests and have an available report, set to true. Else, comment out.
#emma.report.analysis=true
#emma.report.file=.../coverage.xml

## OPTIONAL : If you have sourcecontrol reports running as part of your unit tests and have an available report, set to true. Else, comment out.
## In Many cases this data is not available. You should comment this out when running the XRadar for the first
## time on your project.
#source.control.report.analysis=false
#source.control.report.file=${docs.home}/xml/source_control_report.xml

#test.suite.analysis=false
#test.suite.classes=${version.home}/testclasses

## OPTIONAL : Add your own properties here if you want to run your own system specific tasks from system_specific.xml

